# Install required packages (only runs if not already installed)
!pip install pandas scikit-learn matplotlib --quiet

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Step 1: Load dataset from CSV file
df = pd.read_csv("car.csv")

# Step 2: Display dataset
print("Dataset Loaded Successfully:\n")
print(df.head())

# Step 3: Define features (independent variables) and target (dependent variable)
X = df[['VOLUME', 'WEIGHT']]
y = df['CO2']

# Step 4: Create and train the model
model = LinearRegression()
model.fit(X, y)

print("\nModel trained successfully!")
print(f"Intercept: {model.intercept_}")
print(f"Coefficients: {model.coef_}")

# Step 5: Take user input for prediction
print("\nEnter new car details to predict CO2 emission:")
vol = float(input("Enter Engine Volume (e.g. 1200): "))
wt = float(input("Enter Car Weight (e.g. 1000): "))

# Step 6: Make prediction
predicted_co2 = model.predict([[vol, wt]])
print(f"\nPredicted CO2 emission for car with Volume={vol} & Weight={wt} is: {predicted_co2[0]:.2f}")

# Step 7: Visualizations
# ----------------------------------
# (1) Actual Weight vs CO2
plt.figure(figsize=(6,4))
plt.scatter(df['WEIGHT'], df['CO2'], color='blue', label='Actual CO2')
plt.xlabel('Car Weight')
plt.ylabel('CO2 Emission')
plt.title('Weight vs CO2 Emission (Actual)')
plt.legend()
plt.grid(True)
plt.show()

# (2) Predicted CO2 vs Weight (using model)
predicted = model.predict(X)
plt.figure(figsize=(6,4))
plt.scatter(df['WEIGHT'], y, color='blue', label='Actual CO2')
plt.plot(df['WEIGHT'], predicted, color='red', label='Predicted CO2')
plt.xlabel('Car Weight')
plt.ylabel('CO2 Emission')
plt.title('CO2 Prediction by Weight (Model Output)')
plt.legend()
plt.grid(True)
plt.show()
