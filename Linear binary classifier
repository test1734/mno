# Import libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

# Step 1: Load dataset
df = pd.read_csv("customer_product_purchase.csv")  # <-- your CSV file
print("Dataset Loaded Successfully!\n")
print(df.head())

# Step 2: Encode 'Gender' column (Male=1, Female=0)
le = LabelEncoder()
df['Gender'] = le.fit_transform(df['Gender'])

# Step 3: Define features (X) and target (y)
X = df[['Gender', 'Age', 'Estimated Salary']]
y = df['Purchased']

# Step 4: Split the dataset into train and test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42
)

# Step 5: Feature scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Step 6: Train Linear SVM model
model = SVC(kernel='linear')
model.fit(X_train, y_train)

# Step 7: Predictions
y_pred = model.predict(X_test)

# Step 8: Evaluate model
print("\n Model Evaluation Results:\n")
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nAccuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Step 9: Visualization - Age vs Salary colored by Purchased
plt.figure(figsize=(8,6))
plt.scatter(df[df['Purchased']==0]['Age'], df[df['Purchased']==0]['Estimated Salary'],
            color='red', label='Not Purchased (0)')
plt.scatter(df[df['Purchased']==1]['Age'], df[df['Purchased']==1]['Estimated Salary'],
            color='green', label='Purchased (1)')
plt.title('Customer Purchase Prediction (Linear SVM)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.grid(True)
plt.show()
